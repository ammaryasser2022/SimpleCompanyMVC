@model IEnumerable<EmployeeViewModel>
@*like casting from Object(department) To IEnumerable <Department>*@

    
@{
    ViewData["Title"] = "Index";
}

<h1>All Employees </h1>
<br />
<br />


<form asp-action="Index">
    <div class="row m-5">
        <div class="col-8">
            <input type="text" name="Searchinput" id="Searchinput" placeholder="Search By Name" class="form-control" />
        </div>
        <div class="col-4">
            <input type="submit" value="Search" class=" btn btn-success" />
        </div>
	</div>


</form>

<a  asp-action="Create" class="btn btn-primary"> Create Empolyee  </a>
<br />
<br />





@* <div class=" alert alert-danger">

    <p> @ViewData["Message"] </p>

</div>


<div class=" alert alert-warning">

    <p> @ViewBag.Message2 </p>

</div> *@

@if (!string.IsNullOrEmpty( (string) @TempData["Message"] ))
{
    <div class=" alert alert-success">

        <p> @TempData["Message"] </p>

    </div>
}



@if(Model.Count() >  0 )
{
    <table class="table table-striped table-hover">
        <thead>
            <tr>                         
                <th>@Html.DisplayNameFor(E => E.Image)</th>
                <th>@Html.DisplayNameFor(E => E.Name)</th>
                <th>@Html.DisplayNameFor(E => E.Age)</th>
                <th>@Html.DisplayNameFor(E => E.Address)</th>
                <th>Department</th>           
                <th>@Html.DisplayNameFor(E => E.Email)</th>
                <th>@Html.DisplayNameFor(E => E.PhoneNumber)</th>
                <th>@Html.DisplayNameFor(E => E.Salary)</th>
                <th>@Html.DisplayNameFor(E => E.IsActive)</th>
                <th>@Html.DisplayNameFor(E => E.HiringDate)</th>
                <th>Details</th>
                <th>Update</th>
                <th>Delete</th>
            </tr>
        </thead>


        <tbody>

            @foreach (var employee in Model)
            {
                <tr>
                    <td>
                        <img src="~/files/images/@employee.ImageName" width="150" class="img-fluid rounded-circle"/>

                    </td>
                    <td>@employee.Name</td>
                    <td>@employee.Age</td>
                    <td>@employee.Address</td>
                    <td>@employee?.WorkFor?.Name</td>
                    <td>@Html.DisplayFor(M => employee.Email)</td>
                    <td>@employee.PhoneNumber</td>
                    <td>@Html.DisplayFor(M => employee.Salary)</td>
                    <td>@Html.DisplayFor(M => employee.IsActive)</td>
                    <td>@employee.HiringDate</td>
                    
               

@* 
            <td>
                <a asp-action="Details" asp-route-id="@employee.Id" class=" btn btn-warning">
                    Details
                </a>
            </td>
            <td>
                <a asp-action="Update" asp-route-id="@employee.Id" class=" btn btn-success">
                    Update
                </a>
            </td>
            <td>
                <a asp-action="Delete" asp-route-id="@employee.Id" class=" btn btn-danger">
                    Delete
                </a>
            </td> *@ @*moved to partial index with partial index for departments*@


                     <partial name="_ButtonPartialView" model="@employee.Id.ToString()"  />


                </tr>

            }



        </tbody>


    </table>

}
else
{
    <div class="alert alert-danger">
        <h4>
            There Are No Emplyees 
        </h4>
    </div>
}


 